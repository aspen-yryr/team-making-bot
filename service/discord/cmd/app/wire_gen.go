// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/aspen-yryr/team-making-bot/internal/configs"
	"github.com/aspen-yryr/team-making-bot/internal/constants"
	"github.com/aspen-yryr/team-making-bot/internal/database/connection"
	"github.com/aspen-yryr/team-making-bot/internal/database/migration"
	"github.com/aspen-yryr/team-making-bot/internal/database/repository"
	"github.com/aspen-yryr/team-making-bot/pkg/dg_wrap"
	"github.com/aspen-yryr/team-making-bot/service/discord/bot"
	"github.com/aspen-yryr/team-making-bot/service/discord/match"
)

// Injectors from wire.go:

func InitBot(greet bool) (*bot.Bot, error) {
	botConfig := configs.NewBotConfig()
	discordConfig := configs.NewDiscordConfig()
	session, err := dg_wrap.NewSession(discordConfig)
	if err != nil {
		return nil, err
	}
	discordSvc := dg_wrap.NewDiscordSvc(session)
	discordMatchService := match.NewDiscordMatchService()
	db, err := connection.NewDevConnection()
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(db)
	errors := constants.NewErrors()
	messages := constants.NewMessages()
	migrator := migration.NewSampleMigrator(db)
	botBot := bot.NewBot(botConfig, discordSvc, discordMatchService, userRepository, errors, messages, migrator)
	return botBot, nil
}
