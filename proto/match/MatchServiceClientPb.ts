/**
 * @fileoverview gRPC-Web generated client stub for match
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.19.6
// source: proto/match/match.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_match_match_pb from '../../proto/match/match_pb';


export class MatchSvcClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateUser = new grpcWeb.MethodDescriptor(
    '/match.MatchSvc/CreateUser',
    grpcWeb.MethodType.UNARY,
    proto_match_match_pb.CreateUserRequest,
    proto_match_match_pb.CreateUserResponse,
    (request: proto_match_match_pb.CreateUserRequest) => {
      return request.serializeBinary();
    },
    proto_match_match_pb.CreateUserResponse.deserializeBinary
  );

  createUser(
    request: proto_match_match_pb.CreateUserRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_match_match_pb.CreateUserResponse>;

  createUser(
    request: proto_match_match_pb.CreateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.CreateUserResponse) => void): grpcWeb.ClientReadableStream<proto_match_match_pb.CreateUserResponse>;

  createUser(
    request: proto_match_match_pb.CreateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.CreateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/match.MatchSvc/CreateUser',
        request,
        metadata || {},
        this.methodDescriptorCreateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/match.MatchSvc/CreateUser',
    request,
    metadata || {},
    this.methodDescriptorCreateUser);
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/match.MatchSvc/Create',
    grpcWeb.MethodType.UNARY,
    proto_match_match_pb.CreateMatchRequest,
    proto_match_match_pb.CreateMatchResponse,
    (request: proto_match_match_pb.CreateMatchRequest) => {
      return request.serializeBinary();
    },
    proto_match_match_pb.CreateMatchResponse.deserializeBinary
  );

  create(
    request: proto_match_match_pb.CreateMatchRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_match_match_pb.CreateMatchResponse>;

  create(
    request: proto_match_match_pb.CreateMatchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.CreateMatchResponse) => void): grpcWeb.ClientReadableStream<proto_match_match_pb.CreateMatchResponse>;

  create(
    request: proto_match_match_pb.CreateMatchRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.CreateMatchResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/match.MatchSvc/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/match.MatchSvc/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorFind = new grpcWeb.MethodDescriptor(
    '/match.MatchSvc/Find',
    grpcWeb.MethodType.UNARY,
    proto_match_match_pb.FindRequest,
    proto_match_match_pb.FindResponse,
    (request: proto_match_match_pb.FindRequest) => {
      return request.serializeBinary();
    },
    proto_match_match_pb.FindResponse.deserializeBinary
  );

  find(
    request: proto_match_match_pb.FindRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_match_match_pb.FindResponse>;

  find(
    request: proto_match_match_pb.FindRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.FindResponse) => void): grpcWeb.ClientReadableStream<proto_match_match_pb.FindResponse>;

  find(
    request: proto_match_match_pb.FindRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.FindResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/match.MatchSvc/Find',
        request,
        metadata || {},
        this.methodDescriptorFind,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/match.MatchSvc/Find',
    request,
    metadata || {},
    this.methodDescriptorFind);
  }

  methodDescriptorAppendMembers = new grpcWeb.MethodDescriptor(
    '/match.MatchSvc/AppendMembers',
    grpcWeb.MethodType.UNARY,
    proto_match_match_pb.AppendMemberRequest,
    proto_match_match_pb.Match,
    (request: proto_match_match_pb.AppendMemberRequest) => {
      return request.serializeBinary();
    },
    proto_match_match_pb.Match.deserializeBinary
  );

  appendMembers(
    request: proto_match_match_pb.AppendMemberRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_match_match_pb.Match>;

  appendMembers(
    request: proto_match_match_pb.AppendMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.Match) => void): grpcWeb.ClientReadableStream<proto_match_match_pb.Match>;

  appendMembers(
    request: proto_match_match_pb.AppendMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.Match) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/match.MatchSvc/AppendMembers',
        request,
        metadata || {},
        this.methodDescriptorAppendMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/match.MatchSvc/AppendMembers',
    request,
    metadata || {},
    this.methodDescriptorAppendMembers);
  }

  methodDescriptorShuffle = new grpcWeb.MethodDescriptor(
    '/match.MatchSvc/Shuffle',
    grpcWeb.MethodType.UNARY,
    proto_match_match_pb.ShuffleRequest,
    proto_match_match_pb.ShuffleResponse,
    (request: proto_match_match_pb.ShuffleRequest) => {
      return request.serializeBinary();
    },
    proto_match_match_pb.ShuffleResponse.deserializeBinary
  );

  shuffle(
    request: proto_match_match_pb.ShuffleRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_match_match_pb.ShuffleResponse>;

  shuffle(
    request: proto_match_match_pb.ShuffleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.ShuffleResponse) => void): grpcWeb.ClientReadableStream<proto_match_match_pb.ShuffleResponse>;

  shuffle(
    request: proto_match_match_pb.ShuffleRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_match_match_pb.ShuffleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/match.MatchSvc/Shuffle',
        request,
        metadata || {},
        this.methodDescriptorShuffle,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/match.MatchSvc/Shuffle',
    request,
    metadata || {},
    this.methodDescriptorShuffle);
  }

}

